{"ast":null,"code":"var _jsxFileName = \"/homes/iws/yc888/Multilingual/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCaptionText = ({\n  text,\n  getColor,\n  keywords\n}) => {\n  if (!text) return null;\n  const processText = (input, keywords) => {\n    if (!keywords || keywords.length === 0) return [{\n      type: 'text',\n      content: input\n    }];\n\n    // Create regex for keywords\n    const escaped = keywords.map(k => k.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\n    const regex = new RegExp(`\\\\b(${escaped.join('|')})\\\\b`, 'gi');\n    const segments = [];\n    let lastIndex = 0;\n    let match;\n    while ((match = regex.exec(input)) !== null) {\n      if (match.index > lastIndex) {\n        segments.push({\n          type: 'text',\n          content: input.substring(lastIndex, match.index)\n        });\n      }\n      segments.push({\n        type: 'keyword',\n        content: match[0]\n      });\n      lastIndex = regex.lastIndex;\n    }\n    if (lastIndex < input.length) {\n      segments.push({\n        type: 'text',\n        content: input.substring(lastIndex)\n      });\n    }\n    return segments;\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: processText(text, keywords).map((segment, index) => segment.type === 'keyword' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: getColor()\n      },\n      children: segment.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: segment.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = StyledCaptionText;\nconst App = () => {\n  _s();\n  const [youtubeLink, setYoutubeLink] = useState('');\n  const [videoId, setVideoId] = useState('');\n  const [captions, setCaptions] = useState({});\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n  const [highlightingEnabled, setHighlightingEnabled] = useState(true);\n  const [highlightColor, setHighlightColor] = useState('Electric Blue');\n  const [collapsed, setCollapsed] = useState(false);\n  const [keywords, setKeywords] = useState([]);\n  const extractVideoId = url => {\n    const match = url.match(/[?&]v=([^&]+)/);\n    return match ? match[1] : null;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = extractVideoId(youtubeLink);\n    if (id) {\n      setVideoId(id);\n      fetchCaptions(id);\n    } else {\n      alert('Invalid YouTube URL');\n    }\n  };\n  const fetchCaptions = async videoId => {\n    try {\n      var _data$transcripts$;\n      const response = await fetch(`http://127.0.0.1:5000/api/get-transcript?videoId=${videoId}`);\n      const data = await response.json();\n      setCaptions(data.transcripts);\n      setSelectedLanguage(((_data$transcripts$ = data.transcripts[0]) === null || _data$transcripts$ === void 0 ? void 0 : _data$transcripts$.language_code) || '');\n    } catch (error) {\n      console.error('Failed to fetch captions:', error);\n    }\n  };\n  const extractKeywords = async text => {\n    const stopwords = new Set(['the', 'a', 'an', 'and', 'or', 'but']);\n    const words = text.toLowerCase().match(/\\b\\w+\\b/g) || [];\n    const filtered = words.filter(w => w.length > 2 && !stopwords.has(w));\n    const frequency = filtered.reduce((acc, word) => ({\n      ...acc,\n      [word]: (acc[word] || 0) + 1\n    }), {});\n    const sorted = Object.entries(frequency).sort((a, b) => b[1] - a[1]);\n    return sorted.slice(0, 5).map(([word]) => word);\n  };\n  useEffect(() => {\n    if (captions[selectedLanguage]) {\n      const captionText = captions[selectedLanguage].map(c => c.text).join(' ');\n      extractKeywords(captionText).then(setKeywords);\n    }\n  }, [selectedLanguage, captions]);\n  const getColor = () => {\n    const colorMap = {\n      'Electric Blue': '#007bff',\n      'Cherry Red': '#dc3545',\n      'Forest Green': '#28a745',\n      'Sunny Yellow': '#ffc107',\n      'Royal Purple': '#6f42c1'\n    };\n    return colorMap[highlightColor];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"YouTube Caption Highlighter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: youtubeLink,\n        onChange: e => setYoutubeLink(e.target.value),\n        placeholder: \"Paste YouTube URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), videoId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        frameBorder: \"0\",\n        allowFullScreen: true,\n        title: \"YouTube Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), selectedLanguage && captions[selectedLanguage] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captions-container\",\n        children: captions[selectedLanguage].map((caption, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caption\",\n          children: /*#__PURE__*/_jsxDEV(StyledCaptionText, {\n            text: caption.text,\n            getColor: getColor,\n            keywords: highlightingEnabled ? keywords : []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCollapsed(!collapsed),\n        children: collapsed ? 'Show Settings' : 'Hide Settings'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), !collapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Highlight Keywords:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: highlightingEnabled,\n            onChange: () => setHighlightingEnabled(!highlightingEnabled)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Highlight Color:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: highlightColor,\n            onChange: e => setHighlightColor(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Electric Blue\",\n              children: \"Electric Blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Cherry Red\",\n              children: \"Cherry Red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Forest Green\",\n              children: \"Forest Green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Sunny Yellow\",\n              children: \"Sunny Yellow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Royal Purple\",\n              children: \"Royal Purple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NtNzDSuUbYiHdgLKFYkPOgds5Bo=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCaptionText\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","StyledCaptionText","text","getColor","keywords","processText","input","length","type","content","escaped","map","k","replace","regex","RegExp","join","segments","lastIndex","match","exec","index","push","substring","children","segment","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","youtubeLink","setYoutubeLink","videoId","setVideoId","captions","setCaptions","selectedLanguage","setSelectedLanguage","highlightingEnabled","setHighlightingEnabled","highlightColor","setHighlightColor","collapsed","setCollapsed","setKeywords","extractVideoId","url","handleSubmit","e","preventDefault","id","fetchCaptions","alert","_data$transcripts$","response","fetch","data","json","transcripts","language_code","error","console","extractKeywords","stopwords","Set","words","toLowerCase","filtered","filter","w","has","frequency","reduce","acc","word","sorted","Object","entries","sort","a","b","slice","captionText","c","then","colorMap","className","onSubmit","value","onChange","target","placeholder","width","height","src","frameBorder","allowFullScreen","title","caption","onClick","checked","_c2","$RefreshReg$"],"sources":["/homes/iws/yc888/Multilingual/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst StyledCaptionText = ({ text, getColor, keywords }) => {\n  if (!text) return null;\n\n  const processText = (input, keywords) => {\n    if (!keywords || keywords.length === 0) return [{ type: 'text', content: input }];\n\n    // Create regex for keywords\n    const escaped = keywords.map(k => k.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\n    const regex = new RegExp(`\\\\b(${escaped.join('|')})\\\\b`, 'gi');\n\n    const segments = [];\n    let lastIndex = 0;\n    let match;\n\n    while ((match = regex.exec(input)) !== null) {\n      if (match.index > lastIndex) {\n        segments.push({ type: 'text', content: input.substring(lastIndex, match.index) });\n      }\n      segments.push({ type: 'keyword', content: match[0] });\n      lastIndex = regex.lastIndex;\n    }\n\n    if (lastIndex < input.length) {\n      segments.push({ type: 'text', content: input.substring(lastIndex) });\n    }\n\n    return segments;\n  };\n\n  return (\n    <span>\n      {processText(text, keywords).map((segment, index) =>\n        segment.type === 'keyword' ? (\n          <span key={index} style={{ color: getColor() }}>\n            {segment.content}\n          </span>\n        ) : (\n          <span key={index}>{segment.content}</span>\n        )\n      )}\n    </span>\n  );\n};\n\nconst App = () => {\n  const [youtubeLink, setYoutubeLink] = useState('');\n  const [videoId, setVideoId] = useState('');\n  const [captions, setCaptions] = useState({});\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n  const [highlightingEnabled, setHighlightingEnabled] = useState(true);\n  const [highlightColor, setHighlightColor] = useState('Electric Blue');\n  const [collapsed, setCollapsed] = useState(false);\n  const [keywords, setKeywords] = useState([]);\n\n  const extractVideoId = (url) => {\n    const match = url.match(/[?&]v=([^&]+)/);\n    return match ? match[1] : null;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const id = extractVideoId(youtubeLink);\n    if (id) {\n      setVideoId(id);\n      fetchCaptions(id);\n    } else {\n      alert('Invalid YouTube URL');\n    }\n  };\n\n  const fetchCaptions = async (videoId) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/get-transcript?videoId=${videoId}`);\n      const data = await response.json();\n      setCaptions(data.transcripts);\n      setSelectedLanguage(data.transcripts[0]?.language_code || '');\n    } catch (error) {\n      console.error('Failed to fetch captions:', error);\n    }\n  };\n\n  const extractKeywords = async (text) => {\n    const stopwords = new Set(['the', 'a', 'an', 'and', 'or', 'but']);\n    const words = text.toLowerCase().match(/\\b\\w+\\b/g) || [];\n    const filtered = words.filter(w => w.length > 2 && !stopwords.has(w));\n    const frequency = filtered.reduce((acc, word) => ({ ...acc, [word]: (acc[word] || 0) + 1 }), {});\n    const sorted = Object.entries(frequency).sort((a, b) => b[1] - a[1]);\n    return sorted.slice(0, 5).map(([word]) => word);\n  };\n\n  useEffect(() => {\n    if (captions[selectedLanguage]) {\n      const captionText = captions[selectedLanguage].map(c => c.text).join(' ');\n      extractKeywords(captionText).then(setKeywords);\n    }\n  }, [selectedLanguage, captions]);\n\n  const getColor = () => {\n    const colorMap = {\n      'Electric Blue': '#007bff',\n      'Cherry Red': '#dc3545',\n      'Forest Green': '#28a745',\n      'Sunny Yellow': '#ffc107',\n      'Royal Purple': '#6f42c1'\n    };\n    return colorMap[highlightColor];\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>YouTube Caption Highlighter</h1>\n\n      <form onSubmit={handleSubmit} className=\"input-form\">\n        <input\n          type=\"text\"\n          value={youtubeLink}\n          onChange={(e) => setYoutubeLink(e.target.value)}\n          placeholder=\"Paste YouTube URL\"\n        />\n        <button type=\"submit\">Load</button>\n      </form>\n\n      {videoId && (\n        <div>\n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src={`https://www.youtube.com/embed/${videoId}`}\n            frameBorder=\"0\"\n            allowFullScreen\n            title=\"YouTube Video\"\n          ></iframe>\n\n          {selectedLanguage && captions[selectedLanguage] && (\n            <div className=\"captions-container\">\n              {captions[selectedLanguage].map((caption, index) => (\n                <div key={index} className=\"caption\">\n                  <StyledCaptionText\n                    text={caption.text}\n                    getColor={getColor}\n                    keywords={highlightingEnabled ? keywords : []}\n                  />\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Highlight Settings */}\n      <div className=\"settings\">\n        <button onClick={() => setCollapsed(!collapsed)}>\n          {collapsed ? 'Show Settings' : 'Hide Settings'}\n        </button>\n\n        {!collapsed && (\n          <div>\n            <label>\n              Highlight Keywords:\n              <input\n                type=\"checkbox\"\n                checked={highlightingEnabled}\n                onChange={() => setHighlightingEnabled(!highlightingEnabled)}\n              />\n            </label>\n\n            <label>\n              Highlight Color:\n              <select\n                value={highlightColor}\n                onChange={(e) => setHighlightColor(e.target.value)}\n              >\n                <option value=\"Electric Blue\">Electric Blue</option>\n                <option value=\"Cherry Red\">Cherry Red</option>\n                <option value=\"Forest Green\">Forest Green</option>\n                <option value=\"Sunny Yellow\">Sunny Yellow</option>\n                <option value=\"Royal Purple\">Royal Purple</option>\n              </select>\n            </label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}